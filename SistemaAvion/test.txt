-- Reiniciar la cobertura
tcov reset

-- Crear sensores con diferentes mediciones
create sensor1 := new Sensor({<AoA> |-> 45, <Flaps> |-> 15, <VelocidadAire> |-> 90})
create sensor2 := new Sensor({<AoA> |-> 55, <Flaps> |-> 28, <VelocidadAire> |-> 100})
create sensor3 := new Sensor({<AoA> |-> 35, <Flaps> |-> 22, <VelocidadAire> |-> 85})

-- Crear el sistema con los sensores
create system := new Sistema(sensor1, sensor2, sensor3)

-- Verificar mediciones en diferentes estados
system.verificarMediciones()

-- Imprimir estado y mensaje de alerta
print system.getAlertEstado()
print system.getAlertMensaje()

-- Verificar estados individuales de los sensores
print sensor1.verificarEstadoAoA()
print sensor2.verificarEstadoFlaps()
print sensor3.verificarEstadoVelocidad()

-- Cambiar mediciones y volver a verificar
sensor1.mediciones := {<AoA> |-> 55, <Flaps> |-> 15, <VelocidadAire> |-> 90}
system.verificarMediciones()

-- Imprimir estado y mensaje de alerta después del cambio
print system.getAlertEstado()
print system.getAlertMensaje()

-- Llamar a todas las operaciones de `Alerta`
system.alerta.setMensaje("Prueba de mensaje")
system.alerta.setEstado(true)
print system.getAlertMensaje()
print system.getAlertEstado()

-- Llamar a todas las operaciones de `Sensor`
print sensor1.getMediciones()
print sensor2.verificarEstadoGeneral()
print sensor3.verificarEstadoGeneral()

-- Realizar más verificaciones para cubrir todas las condiciones
sensor2.mediciones := {<AoA> |-> 65, <Flaps> |-> 30, <VelocidadAire> |-> 105}
system.verificarMediciones()
print system.getAlertEstado()
print system.getAlertMensaje()

sensor3.mediciones := {<AoA> |-> 10, <Flaps> |-> 12, <VelocidadAire> |-> 60}
system.verificarMediciones()
print system.getAlertEstado()
print system.getAlertMensaje()

-- Guardar y mostrar cobertura
tcov write vdm.tc
rtinfo vdm.tc
